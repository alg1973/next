#!/usr/bin/python
from __future__ import print_function

import tconf
import bstate
import sys
import dyndb
import time

def db2local(b, db):
    response=db.get_cmd(b.boiler_name,b.boiler_name)
    if response.has_key('Item'):
    	i=response['Item']
    	if b.state['target']!=float(i.get('target',-1)) or  b.state['heating']!=int(i.get('heating',-1)):
            print (b.write_state(float(i.get('target',-1)),int(i.get('heating',-1))))
    else:
        print ("No boiler '{0}' targets in cloud".format(b.boiler_name),file=sys.stderr)
	sys.exit(1)
    return b.state
	

thermo_name=tconf.thermo_name
if len(sys.argv)<2:
	print ("usage: boiler <cmd> [<target_temperature> <heating> [<thermo_name>]]",file=sys.stderr)
	print ("              <cmd> - sync,loop,local,db,read",file=sys.stderr)
	sys.exit(1)
else:
	cmd=sys.argv[1]

if len(sys.argv)>3:
	target=int(sys.argv[2])
	heating=int(sys.argv[3])
	if len(sys.argv)>4:
        	thermo_name=sys.argv[4]
else:
	target=100
	heating=0
	print ('Using default values: target=',target,', heating=',heating)


b=bstate.Boiler(thermo_name) #Assume thermo_name always equal to boiler_name
db=dyndb.Tempdb(tconf.url,tconf.region)

if cmd=='sync': #update local state from db
    db2local(b,db)
elif cmd=='loop': #sync local state from db in loop
    while 1:
        db2local(b,db)
	sys.sleep(tconf.therm_rate*1.5)
elif cmd=='local': #write values to local state file only
    print (b.write_state(target,heating))
elif cmd=='db': #write values to db and locally
    response=db.thermo_cmd(target,heating,b.boiler_name,b.boiler_name)
    print (b.write_state(target,heating))
elif cmd=='read':
    print ('Local file: ', b.read_state())
    response=db.get_cmd(b.boiler_name,b.boiler_name)
    if response.has_key('Item'):
    	i=response['Item']	
    	print("Remote command: target: '{1}', is heating: '{2}', updated at '{0}'".format(
			time.ctime(float(i['utime'])),float(i.get('target',-1)),
                	int(i.get('heating',-1))))
    else:
        print ("No boiler '{0}' targets in cloud".format(b.boiler_name),file=sys.stderr)
	sys.exit(1)
else:
    print ('Unknown command: ', cmd,file=sys.stderr)
    sys.exit(1)


    

	


